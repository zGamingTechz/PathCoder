from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.pdfbase import pdfmetrics
from reportlab.lib import colors
from datetime import datetime

pdfmetrics.registerFont(TTFont("SignatureFont", "static/font.ttf"))

def generate_certificate(name, path, filename):
    c = canvas.Canvas(filename, pagesize=letter)
    width, height = letter

    # --- Title and Header ---
    c.setFont("Helvetica-Bold", 36)
    c.setFillColor(colors.darkblue)
    c.drawCentredString(width / 2, height - 80, "Certificate of Achievement")
    
    # Decorative line below the title
    c.setStrokeColor(colors.black)
    c.setLineWidth(2)
    c.line(100, height - 90, width - 100, height - 90)
    
    # --- Main Text Paragraph ---
    c.setFont("Helvetica", 16)
    c.setFillColor(colors.black)
    c.drawCentredString(width / 2, height - 140, "This Certificate is Proudly Presented to")
    
    # Recipient Name in Bold
    c.setFont("Helvetica-Bold", 24)
    c.drawCentredString(width / 2, height - 170, name)
    
    # Introductory text for the roadmap
    c.setFont("Helvetica", 16)
    c.drawCentredString(width / 2, height - 200, "For successfully completing the learning roadmap in:")
    
    # Display the path/course in Bold
    c.setFont("Helvetica-Bold", 20)
    c.drawCentredString(width / 2, height - 230, path)
    
    # Detailed paragraph (split into multiple lines)
    c.setFont("Helvetica", 16)
    text_lines = [
        f"This certificate is awarded to {name} for demonstrating dedication,",
        "persistence, and excellence in learning.",
        "By completing all tasks in their personalized learning roadmap",
        "generated by PathCoder, they have shown outstanding commitment",
        "to mastering the field."
    ]
    y_position = height - 270
    for line in text_lines:
        c.drawCentredString(width / 2, y_position, line)
        y_position -= 20

    # --- Issuance and Signature ---
    # Centered "Issued by PathCoder"
    c.setFont("Helvetica-Bold", 18)
    c.drawCentredString(width / 2, 380, "Issued by PathCoder")
    
    # Signature area on the left side
    c.setFont("SignatureFont", 24)
    c.drawString(100, 320, "Bhavya Soni")  # Signature text
    
    # Line below the signature for authenticity
    c.line(100, 310, 260, 310)
    
    # "Founder & CEO" below the signature line
    c.setFont("Helvetica", 14)
    c.drawString(100, 290, "Founder & CEO")
    
    # --- Generated On Section (to the right of signature) ---
    generated_date = datetime.now().strftime("%B %d, %Y")
    c.setFont("Helvetica", 12)
    c.drawRightString(width - 100, 320, "Generated On:")
    c.drawRightString(width - 100, 300, generated_date)
    
    # --- PathCoder at the bottom ---
    c.saveState()
    c.setFillColor(colors.blue)
    c.setFont("Helvetica-Bold", 50)
    c.drawCentredString(width / 2, 50, "PathCoder")
    c.restoreState()
    
    c.save()
    print(f"Certificate saved as {filename}")
